{"version":3,"file":"static/js/389.e2bfcf99.chunk.js","mappings":"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","sources":["Components/Pages/Adminsetting.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nconst AdminSetting = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [maxLimit, setMaxLimit] = useState(0);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [tableData, setTableData] = useState([\r\n    { id: 1, callsType: \"Actionable Calls\", percentage: 5, maxLimit: 220 },\r\n    { id: 2, callsType: \"Abusive Calls\", percentage: 5, maxLimit: 220 },\r\n    { id: 3, callsType: \"Missed Calls\", percentage: 5, maxLimit: 220 },\r\n    { id: 4, callsType: \"Non-Voice Signal\", percentage: 5, maxLimit: 220 },\r\n    { id: 5, callsType: \"No Response Calls\", percentage: 5, maxLimit: 220 },\r\n    { id: 6, callsType: \"Trip Monitoring Calls\", percentage: 5, maxLimit: 220 },\r\n    { id: 7, callsType: \"Feedback Calls\", percentage: 5, maxLimit: 220 }\r\n    // Add more rows as needed\r\n  ]);\r\n\r\n  const openModal = (row) => {\r\n    setSelectedRow(row);\r\n    setPercentage(row.percentage);\r\n    setMaxLimit(row.maxLimit);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setSelectedRow(null);\r\n    setPercentage(0);\r\n    setMaxLimit(0);\r\n  };\r\n\r\n  const handleApply = async () => {\r\n    if (selectedRow) {\r\n      try {\r\n        // Update the data in the database\r\n        await axios.put(`/api/update-call/${selectedRow.id}`, {\r\n          percentage,\r\n          maxLimit\r\n        });\r\n\r\n        // Update the selected row with new values\r\n        const updatedTableData = tableData.map((row) =>\r\n          row.id === selectedRow.id ? { ...row, percentage, maxLimit } : row\r\n        );\r\n\r\n        // Update the state with the updated data\r\n        setTableData(updatedTableData);\r\n\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Updated Successfully!\",\r\n          text: `Percentage: ${percentage}, Max Limit: ${maxLimit}`\r\n        });\r\n\r\n        closeModal();\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Update Failed\",\r\n          text: \"There was an error updating the data. Please try again.\"\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main_content_iner overly_inner mt-5\">\r\n      <div className=\"container-fluid p-0\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"page_title_box d-flex align-items-center justify-content-between\">\r\n              <div className=\"page_title_left\">\r\n                <h3 className=\"f_s_30 f_w_700 text_white\">Admin Setting</h3>\r\n                <ol className=\"breadcrumb page_bradcam mb-0\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <Link to=\"#\">Dashboard</Link>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item active\">Admin Settings</li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"white_card mb_20\">\r\n              <div className=\"white_card_header\">\r\n                <div className=\"box_header m-0\">\r\n                  <div className=\"main-title\">\r\n                    <h3 className=\"m-0\">Admin Settings</h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-striped ml-5\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Sr. No.</th>\r\n                      <th scope=\"col\">Calls Type</th>\r\n                      <th scope=\"col\">Percentage of Call For QA</th>\r\n                      <th scope=\"col\">Maximum Limit (In Number)</th>\r\n                      <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {tableData.map((row, index) => (\r\n                      <tr key={row.id}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{row.callsType}</td>\r\n                        <td>{row.percentage}</td>\r\n                        <td>{row.maxLimit}</td>\r\n                        <td>\r\n                          <button\r\n                            className=\"btn btn-outline-info\"\r\n                            onClick={() => openModal(row)}\r\n                            data-toggle=\"tooltip\"\r\n                            data-placement=\"top\"\r\n                            title=\"Edit Call Details\"\r\n                          >\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {showModal && (\r\n          <div className=\"modal fade show\" style={{ display: \"block\" }}>\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\">\r\n                    Edit Settings - {selectedRow.callsType}\r\n                  </h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={closeModal}\r\n                    aria-label=\"Close\"\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"percentage\">\r\n                      Percentage of Calls for QA:\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      id=\"percentage\"\r\n                      value={percentage}\r\n                      onChange={(e) => setPercentage(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"maxLimit\">Maximum Limit (In Number):</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      id=\"maxLimit\"\r\n                      value={maxLimit}\r\n                      onChange={(e) => setMaxLimit(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={closeModal}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleApply}\r\n                  >\r\n                    Apply\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSetting;\r\n"],"names":["AdminSetting","showModal","setShowModal","useState","percentage","setPercentage","maxLimit","setMaxLimit","selectedRow","setSelectedRow","tableData","setTableData","id","callsType","closeModal","_jsx","className","children","_jsxs","Link","to","scope","map","row","index","onClick","openModal","title","FontAwesomeIcon","icon","faEdit","style","display","type","htmlFor","value","onChange","e","target","async","axios","put","concat","updatedTableData","Swal","text","error"],"sourceRoot":""}